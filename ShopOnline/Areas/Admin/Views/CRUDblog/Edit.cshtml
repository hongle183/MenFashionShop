@model ShopOnline.Models.Article

@{
    ViewBag.Title = "Blog";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutDashBoard.cshtml";
}
<div class="page-breadcrumb">
    <div class="row">
        <div class="col-7 align-self-center">
            <h4 class="page-title text-truncate text-dark font-weight-medium mb-1">Edit blog</h4>
            <div class="d-flex align-items-center">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb m-0 p-0">
                        <li class="breadcrumb-item"><a href="~/Admin/CRUDblog/Index" class="text-muted">Blog manage</a></li>
                        <li class="breadcrumb-item text-muted active" aria-current="page">Edit</li>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="col-5 align-self-center">
            <div class="customize-input float-right">
                <select class="custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius">
                    <option selected>Aug 19</option>
                    <option value="1">July 19</option>
                    <option value="2">Jun 19</option>
                </select>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Edit blog</h3>
                    @using (Html.BeginForm("Edit", "CRUDblog", FormMethod.Post, new { @id = "form-1", @enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-body">
                            @Html.HiddenFor(model => model.dateCreate)
                            @Html.HiddenFor(model => model.articleId)
                            @Html.HiddenFor(model => model.memberId)
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label for="title">Title</label>
                                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                                        <span class="form-message"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="meta">Meta</label>
                                        @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                        <span class="form-message"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="description">Description</label>
                                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    <div class="form-group">
                                        <label for="status">Public</label>
                                        @{
                                            bool status = (Model.status.GetValueOrDefault(false) ? true : false);
                                        }
                                        @Html.CheckBoxFor(model => status)
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="productName">Image</label>
                                        <img src=@Url.Content(Model.image) class="img-thumbnail" style="max-height:200px; max-width:342px; display:block; margin-bottom:10px" id="imagePreview" />
                                        <input type="file" name="uploadFile" class="form-control-file" id="image" accept="image/jpeg, image/png" onclick="defaultBtnActive()" />
                                        <span class="form-message"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="content">Content</label>
                                        @*@Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control textareaTinym", @id = "description" } })*@
                                        <textarea class="form-group" name="des" id="content">
                                            @*@if(Model.content.Length < 500)
                                            {*@
                                                 @Html.Raw(Model.content)
                                           @* }
                                            else
                                            {
                                                @Html.Raw(Model.content.Substring(0, 500)) <span> ...</span>
                                            }*@</textarea>
                                        <span class="form-message"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="text-right">
                                <button type="submit" class="btn waves-effect waves-light btn-info">Save changes</button>
                                <a href="~/Admin/CRUDblog/Index" class="btn btn-secondary">Back to list</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/js/validator.js"></script>
<script src="~/Areas/Admin/Content/js/helper.js"></script>
<script>
    Validator({
        form: '#form-1',
        formGroupSelector: '.form-group',
        errorSelector: '.form-message',
        rules: [
            Validator.isRequired('#title')
        ],
    });

    document.addEventListener('DOMContentLoaded', function () {
        var titleInput = document.getElementById('title');
        var metaInput = document.getElementById('meta');

        titleInput.addEventListener('input', function () {
            metaInput.value = cleanText(titleInput.value);
        });
    });
</script>

<script>
    const inputImg = document.querySelector("#image");
    const img = document.querySelector("#imagePreview");

    function defaultBtnActive() {
        inputImg.change();
    }
    inputImg.addEventListener("change", function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function () {
                const result = reader.result;
                img.src = result;
            }
            reader.readAsDataURL(file);
        }
    });
</script>
