@model ShopOnline.Models.Product
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutDashBoard.cshtml";
}

<div class="page-breadcrumb">
    <div class="row">
        <div class="col-7 align-self-center">
            <h4 class="page-title text-truncate text-dark font-weight-medium mb-1">Edit product</h4>
            <div class="d-flex align-items-center">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb m-0 p-0">
                        <li class="breadcrumb-item"><a href="~/Admin/CRUDproduct/Index" class="text-muted">Product list</a></li>
                        <li class="breadcrumb-item text-muted active" aria-current="page">Edit</li>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="col-5 align-self-center">
            <div class="customize-input float-right">
                <select class="custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius">
                    <option selected>Aug 19</option>
                    <option value="1">July 19</option>
                    <option value="2">Jun 19</option>
                </select>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Edit product</h3>
                    @using (Html.BeginForm("Edit", "CRUDproduct", FormMethod.Post, new { @id = "form-1", 
                                                                                    @enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-body">
                            @Html.HiddenFor(model => model.productId)
                            @Html.HiddenFor(model => model.dateCreate)
                            @Html.HiddenFor(model => model.memberId)
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="productName">Product name</label>
                                                @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control", @id = "productName" } })
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="characteristic">Characteristic</label>
                                                @Html.EditorFor(model => model.characteristic, new { htmlAttributes = new { @class = "form-control", @id = "characteristic" } })
                                                <span class="form-message"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="meta">Meta</label>
                                                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control", @id = "meta" } })
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="price">Price</label>
                                                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @id = "price" } })
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="discount">Discount</label>
                                                @Html.EditorFor(model => model.discount, new { htmlAttributes = new { @class = "form-control", @id = "discount" } })
                                                <span class="form-message"></span>
                                            </div>                                            
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="categoryId">Category</label>
                                                @Html.DropDownList("categoryId", null, htmlAttributes: new { @class = "form-control" })
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="quanlity">Quality</label>
                                                @Html.EditorFor(model => model.quanlity, new { htmlAttributes = new { @class = "form-control", @id = "quanlity" } })
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="status">Public</label>
                                                @{
                                                    bool status = (Model.status.GetValueOrDefault(false) ? true : false);
                                                }
                                                @Html.CheckBoxFor(model => status)
                                                <p>Update date: @Model.dateCreate</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="image">Image</label>
                                        <img src=@Url.Content(Model.image) class="img-thumbnail" style="max-height:300px; max-width:342px; display:block; margin-bottom:10px" id="imagePreview" />
                                        <input type="file" name="uploadFile" class="form-control-file" id="image" 
                                               accept="image/jpeg, image/png" onclick="defaultBtnActive()" />
                                        <span class="form-message"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="description">Desciption</label>
                                        <textarea class="form-group" name="des" id="description">
                                             @Html.Raw(Model.description)
                                        </textarea>
                                        <span class="form-message"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="text-right">
                                <button type="submit" class="btn btn-info">Save changes</button>
                                <a href="~/Admin/CRUDproduct/Index" class="btn btn-dark">Back to list</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/js/validator.js"></script>
<script src="~/Areas/Admin/Content/js/helper.js"></script>
<script>
    Validator({
        form: '#form-1',
        formGroupSelector: '.form-group',
        errorSelector: '.form-message',
        rules: [
            Validator.isRequired('#productName'),
            Validator.isRequired('#meta'),
            Validator.isRequired('#quanlity'),
            Validator.isRequired('#price'),
            Validator.isRequired('#discount')
        ],
    });

    document.addEventListener('DOMContentLoaded', function () {
        var productNameInput = document.getElementById('productName');
        var metaInput = document.getElementById('meta');

        productNameInput.addEventListener('input', function () {
            metaInput.value = cleanText(productNameInput.value);
        });
    });
</script>

<script>
    const inputImg = document.querySelector("#image");
    const img = document.querySelector("#imagePreview");

    function defaultBtnActive() {
        inputImg.change();
    }
    inputImg.addEventListener("change", function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function () {
                const result = reader.result;
                img.src = result;
            }
            reader.readAsDataURL(file);
        }
    });
</script>