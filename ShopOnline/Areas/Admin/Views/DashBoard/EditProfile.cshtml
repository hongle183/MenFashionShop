@model ShopOnline.Models.Member
@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutDashBoard.cshtml";
}
<div class="page-breadcrumb">
    <div class="row">
        <div class="col-7 align-self-center">
            <h3 class="page-title text-truncate text-dark font-weight-medium mb-1">Manager my account!</h3>
            <div class="d-flex align-items-center">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb m-0 p-0">
                        <li class="breadcrumb-item">
                            <a href="~/Admin/DashBoard/Index">Dashboard</a>
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="col-5 align-self-center">
            <div class="customize-input float-right">
                <select class="custom-select custom-select-set form-control bg-white border-0 custom-shadow custom-radius">
                    <option selected>Nov 25</option>
                    <option value="1">Oct 25</option>
                    <option value="2">Sep 25</option>
                </select>
            </div>
        </div>
    </div>
</div>

@if (TempData["msgEditProfile"] != null)
{
    <script>
        showToast({
            type: "success",
            message: "@TempData["msgEditProfile"].ToString().Replace("\"", "\\\"")"
        });
    </script>
}
else if (TempData["msgEditProfileFailed"] != null)
{
    <script>
        showToast({
            type: "danger",
            message: "@TempData["msgEditProfileFailed"].ToString().Replace("\"", "\\\"")"
        });
    </script>
}
@if (TempData["msgChangePassword"] != null)
{
    <script>
        showToast({
            type: "success",
            message: "@TempData["msgChangePassword"].ToString().Replace("\"", "\\\"")"
        });
    </script>
}
else if (TempData["msgChangePasswordFailed"] != null)
{
    <script>
        showToast({
            type: "danger",
            message: "@TempData["msgChangePasswordFailed"].ToString().Replace("\"", "\\\"")"
        });
    </script>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <nav>
                        <div class="nav nav-pills" role="tablist">
                            <a class="nav-item nav-link active" id="nav-profile-tab" data-toggle="pill" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="true">Profile</a>
                            <a class="nav-item nav-link" id="nav-password-tab" data-toggle="pill" href="#nav-password" role="tab" aria-controls="nav-password" aria-selected="false">Change Password</a>
                        </div>
                    </nav>
                    <div class="tab-content mt-4">
                        <div class="tab-pane fade show active" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                            @using (Html.BeginForm("EditProfile", "DashBoard", FormMethod.Post, new { @id = "form-1", @enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <img src=@Url.Content(Model.avatar) id="imagePreview" alt="image" style="width: 290px; max-width: 100%; height: 290px; border-radius: 50%; object-fit: cover;">
                                            <input type="file" name="uploadFile" class="form-control-file" id="image" accept="image/jpeg, image/png" onclick="defaultBtnActive()" />
                                        </div>
                                        <div class="col-md-8">
                                            @Html.HiddenFor(model => model.dateCreate)
                                            @Html.HiddenFor(model => model.status)
                                            @Html.HiddenFor(model => model.roleId)
                                            @Html.HiddenFor(model => model.password)
                                            @Html.HiddenFor(model => model.memberId)

                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="productName">First name</label>
                                                        @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", @id = "firstName" } })
                                                        <span class="form-message"></span>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="productName">Last name</label>
                                                        @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", @id = "lastName" } })
                                                        <span class="form-message"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="productName">Birthday</label>
                                                        @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control", @id = "birthday", @Value = @Model.birthday.Value.Date.ToString("yyyy/MM/dd"), @placeholder = "yyyy/mm/dd" } })
                                                        <span class="form-message"></span>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="productName">Phone</label>
                                                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", @id = "phone" } })
                                                        <span class="form-message"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="productName">Email</label>
                                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="productName">Address</label>
                                                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @id = "address" } })
                                                <span class="form-message"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <div class="text-right">
                                        <button type="submit" class="btn btn-info">Save changes</button>
                                        <button type="reset" class="btn btn-dark">Reset</button>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="tab-pane fade" id="nav-password" role="tabpanel" aria-labelledby="nav-password-tab">
                            @using (Html.BeginForm("ChangePassword", "DashBoard", FormMethod.Post, new { @id = "form-2", @enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-body">
                                    @*set id rỗng để k bị trùng với id của editfor ở trên*@
                                    @Html.HiddenFor(model => model.dateCreate, new { id = "" })
                                    @Html.HiddenFor(model => model.status, new { id = "" })
                                    @Html.HiddenFor(model => model.roleId, new { id = "" })
                                    @Html.HiddenFor(model => model.memberId, new { id = "" })
                                    @Html.HiddenFor(model => model.firstName, new { id = "" })
                                    @Html.HiddenFor(model => model.lastName, new { id = "" })
                                    @Html.HiddenFor(model => model.email, new { id = "" })
                                    @Html.HiddenFor(model => model.phone, new { id = "" })
                                    @Html.HiddenFor(model => model.address, new { id = "" })
                                    @Html.HiddenFor(model => model.birthday, new { id = "" })
                                    @Html.HiddenFor(model => model.avatar, new { id = "" })

                                    <div class="row justify-content-center">
                                        <div class="col-4">
                                            <div class="form-group">
                                                <label for="userName">Current password</label>
                                                <input type="password" class="form-control" id="current-password" name="CurPassword" />
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="productName">New password</label>
                                                <input type="password" class="form-control" id="new-password" name="NewPassword" />
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="productName">Confirm password</label>
                                                <input type="password" class="form-control" id="password_confirmation" name="Confirm" />
                                                <span class="form-message"></span>
                                            </div>
                                            <div class="form-group text-center">
                                                <button type="submit" class="btn btn-info">Save changes</button>
                                                <button type="reset" class="btn btn-dark">Reset</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/js/validator.js"></script>
<script>
    Validator({
        form: '#form-1',
        formGroupSelector: '.form-group',
        errorSelector: '.form-message',
        rules: [
            Validator.isRequired('#firstName'),
            Validator.isRequired('#lastName'),
            Validator.isEmail('#email'),
            Validator.isDate('#birthday'),
            Validator.isRequired('#phone'),
            Validator.isRequired('#address'),
        ],
    });

    Validator({
        form: '#form-2',
        formGroupSelector: '.form-group',
        errorSelector: '.form-message',
        rules: [

            Validator.isRequired('#current-password'),
            Validator.minLength('#new-password', 6),
            Validator.isConfirmed('#password_confirmation', function () {
                return document.querySelector('#form-2 #new-password').value;
            }, 'Mật khẩu không khớp')
        ],
    });
</script>

<script>
    const inputImg = document.querySelector("#image");
    const img = document.querySelector("#imagePreview");

    function defaultBtnActive() {
        inputImg.change();
    }
    inputImg.addEventListener("change", function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function () {
                const result = reader.result;
                img.src = result;
            }
            reader.readAsDataURL(file);
        }
    });
</script>